pipeline{

environment
{
registry = "alaaguissouma/timesheet"
registryCredential= 'dockerHub'
dockerImage = ''
}

agent any 
	stages{
		stage ('Checkout GIT'){
			steps{
				echo 'Pulling...';
					git branch: 'alaa',
					url : 'https://github.com/Sandboxieh/DevOps_5SIM1';
			}
		}

		stage ("Verification du  version Maven"){
			steps{
				bat """mvn -version"""
			}
		}


		 stage ("Cleaning"){
		 	steps{
		 		bat """mvn clean """
		 	}
		 }


 		 stage ("Creation de livrable"){
		 	steps{
		 		bat """mvn package -Dmaven.test.skip=true"""
		 	}
		 }

		 stage ("Lancement des Tests Unitaires"){
		 	steps{
		 		bat """mvn test"""
		 	}
		 }


		 stage ("Analyse avec Sonar"){
		 	steps{
		 		bat """mvn sonar:sonar"""
		 	}
		 }

		 stage ("Deploiement vers Nexus"){
		 	steps{
		 		bat """mvn clean package -Dmaven.test.failure.ignore=true deploy:deploy-file -DgroupId=tn.esprit.spring -DartifactId=timesheet -Dversion=1.0-SNAPSHOT -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://localhost:8081/repository/maven-snapshots/ -Dfile=target/timesheet-1.0-SNAPSHOT.jar"""
		 	}
		 }

		
		stage('Building our Docker image') {
          steps { script { dockerImage= docker.build registry + ":$BUILD_NUMBER" } }
          }

        stage('Deploying our Docker image') {
          steps { script { docker.withRegistry( '', registryCredential) { dockerImage.push() } } }
          }

		stage('Cleaning up') {
          steps { bat "docker rmi $registry:$BUILD_NUMBER" }
          }


		 stage('Pulling from docker hub') { 
                steps { 
                    script { 
                    docker.withRegistry( '', registryCredential ) { 
                        dockerImage.pull() 
                    }
                } 
             }
           } 

  		 stage('Running docker image') { 
                steps { 
                    bat "docker container run --network timesheet-network --name timesheet-container -p 8083:8083 -d $registry:$BUILD_NUMBER"
                }
           } 
	}

		stage('Sending Email'){
			steps{
			mail bcc: '', body: 'Build Success', cc: '', from: '', replyTo: '', subject: 'Jenkins', to: 'sandiehftw@gmail.com'
			}
		}

	}
	


	post{
		success{
			emailext body: 'Build success', subject: 'Jenkins', to:'sandiehftw@gmail.com'
		}
		failure{
			emailext body: 'Build failure', subject: 'Jenkins', to:'sandiehftw@gmail.com'
		}

	}
}